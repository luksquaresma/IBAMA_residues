{
  "name" : "IBAMA_pipeline_gerador",
  "description" : "",
  "role" : "arn:aws:iam::280755897748:role/ETL_ELT",
  "executionProperty" : {
    "maxConcurrentRuns" : 1
  },
  "command" : {
    "name" : "glueetl",
    "scriptLocation" : "s3://jm2vtech/pos/residuos_solidos_ibama/pipeline/glue/IBAMA_pipeline_gerador.py",
    "pythonVersion" : "3"
  },
  "defaultArguments" : {
    "--enable-metrics" : "true",
    "--enable-spark-ui" : "true",
    "--spark-event-logs-path" : "s3://jm2vtech/pos/residuos_solidos_ibama/pipeline/glue/spark_ui/",
    "--enable-job-insights" : "true",
    "--enable-observability-metrics" : "true",
    "--enable-glue-datacatalog" : "true",
    "--enable-continuous-cloudwatch-log" : "true",
    "--job-bookmark-option" : "job-bookmark-disable",
    "--job-language" : "python",
    "--TempDir" : "s3://jm2vtech/pos/residuos_solidos_ibama/pipeline/glue/tmp/"
  },
  "maxRetries" : 0,
  "allocatedCapacity" : 4,
  "timeout" : 60,
  "maxCapacity" : 4.0,
  "glueVersion" : "4.0",
  "numberOfWorkers" : 2,
  "workerType" : "G.2X",
  "executionClass" : "FLEX",
  "codeGenConfigurationNodes" : "{\"node-1704403189853\":{\"SparkSQL\":{\"Inputs\":[\"node-1704373060407\"],\"Name\":\"Liquidos Perigosos\",\"OutputSchemas\":[{\"Columns\":[{\"Name\":\"word\",\"Type\":\"string\"},{\"Name\":\"anogeracao\",\"Type\":\"bigint\"},{\"Name\":\"detalhe\",\"Type\":\"double\"},{\"Name\":\"tiporesiduo\",\"Type\":\"double\"},{\"Name\":\"categoriaatividade\",\"Type\":\"double\"},{\"Name\":\"razaosocialgerador\",\"Type\":\"double\"}]}],\"SqlAliases\":[{\"Alias\":\"myDataSource\",\"From\":\"node-1704373060407\"}],\"SqlQuery\":\"WITH \\n\\nsplited AS (\\n    SELECT \\n\\n    cast(regexp_replace(regexp_replace(quantidadegerada, '[.]', ''), ',', '.') as double) as quantidadegerada,\\n    anogeracao,\\n    split(lower(regexp_replace(detalhe, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as detalhe,\\n    split(lower(regexp_replace(tiporesiduo, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as tiporesiduo,\\n    split(lower(regexp_replace(categoriaatividade, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as categoriaatividade,\\n    split(lower(regexp_replace(razaosocialgerador, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as razaosocialgerador\\n\\n    FROM myDataSource\\n    WHERE unidade=\\\"Litro\\\" AND classificacaoresiduo=\\\"Perigoso\\\"\\n),\\n\\nexp_detalhe AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(detalhe AS FLOAT), 0)) AS detalhe\\n    FROM \\n    (\\n        SELECT \\n            explode(detalhe) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS detalhe\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n),\\n\\nexp_tiporesiduo AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(tiporesiduo AS FLOAT), 0)) AS tiporesiduo\\n    FROM \\n    (\\n        SELECT \\n            explode(tiporesiduo) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS tiporesiduo\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n),\\n\\nexp_categoriaatividade AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(categoriaatividade AS FLOAT), 0)) AS categoriaatividade\\n    FROM \\n    (\\n        SELECT \\n            explode(categoriaatividade) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS categoriaatividade\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n),\\n\\nexp_razaosocialgerador AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(razaosocialgerador AS FLOAT), 0)) AS razaosocialgerador\\n    FROM \\n    (\\n        SELECT \\n            explode(razaosocialgerador) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS razaosocialgerador\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n)\\n\\nSELECT \\n    COALESCE(\\n        exp_detalhe.word, \\n        exp_tiporesiduo.word, \\n        exp_categoriaatividade.word, \\n        exp_razaosocialgerador.word\\n        ) AS word,\\n    COALESCE(\\n        exp_detalhe.anogeracao, \\n        exp_tiporesiduo.anogeracao, \\n        exp_categoriaatividade.anogeracao, \\n        exp_razaosocialgerador.anogeracao\\n        ) AS anogeracao,  \\n    COALESCE(detalhe, 0) AS detalhe,\\n    COALESCE(tiporesiduo, 0) AS tiporesiduo,\\n    COALESCE(categoriaatividade, 0) AS categoriaatividade,\\n    COALESCE(razaosocialgerador, 0) AS razaosocialgerador\\n\\nFROM exp_detalhe \\nFULL OUTER JOIN exp_tiporesiduo \\nON exp_detalhe.word = exp_tiporesiduo.word \\nAND exp_detalhe.anogeracao = exp_tiporesiduo.anogeracao\\n\\nFULL OUTER JOIN exp_categoriaatividade \\nON COALESCE(exp_detalhe.word, exp_tiporesiduo.word) = exp_categoriaatividade.word\\nAND COALESCE(exp_detalhe.anogeracao, exp_tiporesiduo.anogeracao) = exp_categoriaatividade.anogeracao\\n\\nFULL OUTER JOIN exp_razaosocialgerador \\nON COALESCE(exp_detalhe.word, exp_tiporesiduo.word, exp_categoriaatividade.word) = exp_razaosocialgerador.word\\nAND COALESCE(exp_detalhe.anogeracao, exp_tiporesiduo.anogeracao, exp_categoriaatividade.anogeracao) = exp_razaosocialgerador.anogeracao\\n\\n;\"}},\"node-1704402501636\":{\"SparkSQL\":{\"Inputs\":[\"node-1704373060407\"],\"Name\":\"Sólidos Perigosos\",\"OutputSchemas\":[{\"Columns\":[{\"Name\":\"word\",\"Type\":\"string\"},{\"Name\":\"anogeracao\",\"Type\":\"bigint\"},{\"Name\":\"detalhe\",\"Type\":\"double\"},{\"Name\":\"tiporesiduo\",\"Type\":\"double\"},{\"Name\":\"categoriaatividade\",\"Type\":\"double\"},{\"Name\":\"razaosocialgerador\",\"Type\":\"double\"}]}],\"SqlAliases\":[{\"Alias\":\"myDataSource\",\"From\":\"node-1704373060407\"}],\"SqlQuery\":\"WITH \\n\\nsplited AS (\\n    SELECT \\n\\n    cast(regexp_replace(regexp_replace(quantidadegerada, '[.]', ''), ',', '.') as double) as quantidadegerada,\\n    anogeracao,\\n    split(lower(regexp_replace(detalhe, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as detalhe,\\n    split(lower(regexp_replace(tiporesiduo, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as tiporesiduo,\\n    split(lower(regexp_replace(categoriaatividade, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as categoriaatividade,\\n    split(lower(regexp_replace(razaosocialgerador, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as razaosocialgerador\\n\\n    FROM myDataSource\\n    WHERE unidade=\\\"kilogramas\\\" AND classificacaoresiduo=\\\"Perigoso\\\"\\n),\\n\\nexp_detalhe AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(detalhe AS FLOAT), 0)) AS detalhe\\n    FROM \\n    (\\n        SELECT \\n            explode(detalhe) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS detalhe\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n),\\n\\nexp_tiporesiduo AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(tiporesiduo AS FLOAT), 0)) AS tiporesiduo\\n    FROM \\n    (\\n        SELECT \\n            explode(tiporesiduo) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS tiporesiduo\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n),\\n\\nexp_categoriaatividade AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(categoriaatividade AS FLOAT), 0)) AS categoriaatividade\\n    FROM \\n    (\\n        SELECT \\n            explode(categoriaatividade) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS categoriaatividade\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n),\\n\\nexp_razaosocialgerador AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(razaosocialgerador AS FLOAT), 0)) AS razaosocialgerador\\n    FROM \\n    (\\n        SELECT \\n            explode(razaosocialgerador) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS razaosocialgerador\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n)\\n\\nSELECT \\n    COALESCE(\\n        exp_detalhe.word, \\n        exp_tiporesiduo.word, \\n        exp_categoriaatividade.word, \\n        exp_razaosocialgerador.word\\n        ) AS word,\\n    COALESCE(\\n        exp_detalhe.anogeracao, \\n        exp_tiporesiduo.anogeracao, \\n        exp_categoriaatividade.anogeracao, \\n        exp_razaosocialgerador.anogeracao\\n        ) AS anogeracao,  \\n    COALESCE(detalhe, 0) AS detalhe,\\n    COALESCE(tiporesiduo, 0) AS tiporesiduo,\\n    COALESCE(categoriaatividade, 0) AS categoriaatividade,\\n    COALESCE(razaosocialgerador, 0) AS razaosocialgerador\\n\\nFROM exp_detalhe \\nFULL OUTER JOIN exp_tiporesiduo \\nON exp_detalhe.word = exp_tiporesiduo.word \\nAND exp_detalhe.anogeracao = exp_tiporesiduo.anogeracao\\n\\nFULL OUTER JOIN exp_categoriaatividade \\nON COALESCE(exp_detalhe.word, exp_tiporesiduo.word) = exp_categoriaatividade.word\\nAND COALESCE(exp_detalhe.anogeracao, exp_tiporesiduo.anogeracao) = exp_categoriaatividade.anogeracao\\n\\nFULL OUTER JOIN exp_razaosocialgerador \\nON COALESCE(exp_detalhe.word, exp_tiporesiduo.word, exp_categoriaatividade.word) = exp_razaosocialgerador.word\\nAND COALESCE(exp_detalhe.anogeracao, exp_tiporesiduo.anogeracao, exp_categoriaatividade.anogeracao) = exp_razaosocialgerador.anogeracao\\n\\n;\"}},\"node-1704373060407\":{\"S3ParquetSource\":{\"AdditionalOptions\":{\"EnableSamplePath\":false,\"SamplePath\":\"s3://jm2vtech/pos/residuos_solidos_ibama/results_compressed/gerador_residuo_solido.parquet\"},\"Exclusions\":[],\"Name\":\"Gerador\",\"OutputSchemas\":[{\"Columns\":[{\"Name\":\"cnpjgerador\",\"Type\":\"string\"},{\"Name\":\"estado\",\"Type\":\"string\"},{\"Name\":\"detalhe\",\"Type\":\"string\"},{\"Name\":\"situacaocadastral\",\"Type\":\"string\"},{\"Name\":\"municipio\",\"Type\":\"string\"},{\"Name\":\"codigodetalhe\",\"Type\":\"bigint\"},{\"Name\":\"anogeracao\",\"Type\":\"bigint\"},{\"Name\":\"codigocategoria\",\"Type\":\"bigint\"},{\"Name\":\"unidade\",\"Type\":\"string\"},{\"Name\":\"classificacaoresiduo\",\"Type\":\"string\"},{\"Name\":\"quantidadegerada\",\"Type\":\"string\"},{\"Name\":\"tiporesiduo\",\"Type\":\"string\"},{\"Name\":\"categoriaatividade\",\"Type\":\"string\"},{\"Name\":\"razaosocialgerador\",\"Type\":\"string\"},{\"Name\":\"codresiduo\",\"Type\":\"bigint\"},{\"Name\":\"__index_level_0__\",\"Type\":\"bigint\"}]}],\"Paths\":[\"s3://jm2vtech/pos/residuos_solidos_ibama/results_compressed/gerador_residuo_solido.parquet\"],\"Recurse\":true}},\"node-1704402450252\":{\"SparkSQL\":{\"Inputs\":[\"node-1704373060407\"],\"Name\":\"Sólidos Não Perigosos\",\"OutputSchemas\":[{\"Columns\":[{\"Name\":\"word\",\"Type\":\"string\"},{\"Name\":\"anogeracao\",\"Type\":\"bigint\"},{\"Name\":\"detalhe\",\"Type\":\"double\"},{\"Name\":\"tiporesiduo\",\"Type\":\"double\"},{\"Name\":\"categoriaatividade\",\"Type\":\"double\"},{\"Name\":\"razaosocialgerador\",\"Type\":\"double\"}]}],\"SqlAliases\":[{\"Alias\":\"myDataSource\",\"From\":\"node-1704373060407\"}],\"SqlQuery\":\"WITH \\n\\nsplited AS (\\n    SELECT \\n\\n    cast(regexp_replace(regexp_replace(quantidadegerada, '[.]', ''), ',', '.') as double) as quantidadegerada,\\n    anogeracao,\\n    split(lower(regexp_replace(detalhe, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as detalhe,\\n    split(lower(regexp_replace(tiporesiduo, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as tiporesiduo,\\n    split(lower(regexp_replace(categoriaatividade, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as categoriaatividade,\\n    split(lower(regexp_replace(razaosocialgerador, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as razaosocialgerador\\n\\n    FROM myDataSource\\n    where unidade=\\\"kilogramas\\\" and classificacaoresiduo=\\\"Não Perigoso\\\"\\n),\\n\\nexp_detalhe AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(detalhe AS FLOAT), 0)) AS detalhe\\n    FROM \\n    (\\n        SELECT \\n            explode(detalhe) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS detalhe\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n),\\n\\nexp_tiporesiduo AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(tiporesiduo AS FLOAT), 0)) AS tiporesiduo\\n    FROM \\n    (\\n        SELECT \\n            explode(tiporesiduo) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS tiporesiduo\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n),\\n\\nexp_categoriaatividade AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(categoriaatividade AS FLOAT), 0)) AS categoriaatividade\\n    FROM \\n    (\\n        SELECT \\n            explode(categoriaatividade) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS categoriaatividade\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n),\\n\\nexp_razaosocialgerador AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(razaosocialgerador AS FLOAT), 0)) AS razaosocialgerador\\n    FROM \\n    (\\n        SELECT \\n            explode(razaosocialgerador) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS razaosocialgerador\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n)\\n\\nSELECT \\n    COALESCE(\\n        exp_detalhe.word, \\n        exp_tiporesiduo.word, \\n        exp_categoriaatividade.word, \\n        exp_razaosocialgerador.word\\n        ) AS word,\\n    COALESCE(\\n        exp_detalhe.anogeracao, \\n        exp_tiporesiduo.anogeracao, \\n        exp_categoriaatividade.anogeracao, \\n        exp_razaosocialgerador.anogeracao\\n        ) AS anogeracao,  \\n    COALESCE(detalhe, 0) AS detalhe,\\n    COALESCE(tiporesiduo, 0) AS tiporesiduo,\\n    COALESCE(categoriaatividade, 0) AS categoriaatividade,\\n    COALESCE(razaosocialgerador, 0) AS razaosocialgerador\\n\\nFROM exp_detalhe \\nFULL OUTER JOIN exp_tiporesiduo \\nON exp_detalhe.word = exp_tiporesiduo.word \\nAND exp_detalhe.anogeracao = exp_tiporesiduo.anogeracao\\n\\nFULL OUTER JOIN exp_categoriaatividade \\nON COALESCE(exp_detalhe.word, exp_tiporesiduo.word) = exp_categoriaatividade.word\\nAND COALESCE(exp_detalhe.anogeracao, exp_tiporesiduo.anogeracao) = exp_categoriaatividade.anogeracao\\n\\nFULL OUTER JOIN exp_razaosocialgerador \\nON COALESCE(exp_detalhe.word, exp_tiporesiduo.word, exp_categoriaatividade.word) = exp_razaosocialgerador.word\\nAND COALESCE(exp_detalhe.anogeracao, exp_tiporesiduo.anogeracao, exp_categoriaatividade.anogeracao) = exp_razaosocialgerador.anogeracao\\n\\n;\"}},\"node-1704402360951\":{\"SparkSQL\":{\"Inputs\":[\"node-1704373060407\"],\"Name\":\"Liquidos Não Perigosos\",\"OutputSchemas\":[{\"Columns\":[{\"Name\":\"word\",\"Type\":\"string\"},{\"Name\":\"anogeracao\",\"Type\":\"bigint\"},{\"Name\":\"detalhe\",\"Type\":\"double\"},{\"Name\":\"tiporesiduo\",\"Type\":\"double\"},{\"Name\":\"categoriaatividade\",\"Type\":\"double\"},{\"Name\":\"razaosocialgerador\",\"Type\":\"double\"}]}],\"SqlAliases\":[{\"Alias\":\"myDataSource\",\"From\":\"node-1704373060407\"}],\"SqlQuery\":\"WITH \\n\\nsplited AS (\\n    SELECT \\n\\n    cast(regexp_replace(regexp_replace(quantidadegerada, '[.]', ''), ',', '.') as double) as quantidadegerada,\\n    anogeracao,\\n    split(lower(regexp_replace(detalhe, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as detalhe,\\n    split(lower(regexp_replace(tiporesiduo, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as tiporesiduo,\\n    split(lower(regexp_replace(categoriaatividade, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as categoriaatividade,\\n    split(lower(regexp_replace(razaosocialgerador, '[^a-zA-Z0-9áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙäëïöüÄËÏÖÜâêîôûÂÊÎÔÛãñõÃÑÕçÇ°º]', ' ')), ' ') as razaosocialgerador\\n\\n    FROM myDataSource\\n    where unidade=\\\"Litro\\\" and classificacaoresiduo=\\\"Não Perigoso\\\"\\n),\\n\\nexp_detalhe AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(detalhe AS FLOAT), 0)) AS detalhe\\n    FROM \\n    (\\n        SELECT \\n            explode(detalhe) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS detalhe\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n),\\n\\nexp_tiporesiduo AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(tiporesiduo AS FLOAT), 0)) AS tiporesiduo\\n    FROM \\n    (\\n        SELECT \\n            explode(tiporesiduo) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS tiporesiduo\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n),\\n\\nexp_categoriaatividade AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(categoriaatividade AS FLOAT), 0)) AS categoriaatividade\\n    FROM \\n    (\\n        SELECT \\n            explode(categoriaatividade) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS categoriaatividade\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n),\\n\\nexp_razaosocialgerador AS (\\n    SELECT \\n        word,\\n        anogeracao,\\n        SUM(COALESCE(CAST(razaosocialgerador AS FLOAT), 0)) AS razaosocialgerador\\n    FROM \\n    (\\n        SELECT \\n            explode(razaosocialgerador) AS word,\\n            anogeracao,\\n            CASE \\n                WHEN quantidadegerada IS NULL OR quantidadegerada = '' THEN '0'\\n                ELSE quantidadegerada\\n            END AS razaosocialgerador\\n        FROM splited\\n    ) AS exploded_words\\n    WHERE NOT (word RLIKE '^[0-9]+([,.][0-9]+)?$') AND word != ''\\n    GROUP BY word, anogeracao\\n    ORDER BY word DESC\\n)\\n\\nSELECT \\n    COALESCE(\\n        exp_detalhe.word, \\n        exp_tiporesiduo.word, \\n        exp_categoriaatividade.word, \\n        exp_razaosocialgerador.word\\n        ) AS word,\\n    COALESCE(\\n        exp_detalhe.anogeracao, \\n        exp_tiporesiduo.anogeracao, \\n        exp_categoriaatividade.anogeracao, \\n        exp_razaosocialgerador.anogeracao\\n        ) AS anogeracao,  \\n    COALESCE(detalhe, 0) AS detalhe,\\n    COALESCE(tiporesiduo, 0) AS tiporesiduo,\\n    COALESCE(categoriaatividade, 0) AS categoriaatividade,\\n    COALESCE(razaosocialgerador, 0) AS razaosocialgerador\\n\\nFROM exp_detalhe \\nFULL OUTER JOIN exp_tiporesiduo \\nON exp_detalhe.word = exp_tiporesiduo.word \\nAND exp_detalhe.anogeracao = exp_tiporesiduo.anogeracao\\n\\nFULL OUTER JOIN exp_categoriaatividade \\nON COALESCE(exp_detalhe.word, exp_tiporesiduo.word) = exp_categoriaatividade.word\\nAND COALESCE(exp_detalhe.anogeracao, exp_tiporesiduo.anogeracao) = exp_categoriaatividade.anogeracao\\n\\nFULL OUTER JOIN exp_razaosocialgerador \\nON COALESCE(exp_detalhe.word, exp_tiporesiduo.word, exp_categoriaatividade.word) = exp_razaosocialgerador.word\\nAND COALESCE(exp_detalhe.anogeracao, exp_tiporesiduo.anogeracao, exp_categoriaatividade.anogeracao) = exp_razaosocialgerador.anogeracao\\n\\n;\"}}}",
  "sourceControlDetails" : {
    "provider" : "GITHUB",
    "repository" : "IBAMA_residues",
    "branch" : "main",
    "folder" : "AWS_GLUE"
  }
}